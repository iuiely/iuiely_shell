##  在本地服务器编辑的配置文件的名称和路径.
##  这个文件编辑完后会复制到目标应用服务器，覆盖掉目标服务器的同名配置文件
##  例如:项目platform的nginx配置文件名称是 platform.conf
##  修改变量local_confs_file_name='' 为指定软件项目的配置文件
local_confs_dir=${DIR}/${confs}/${soft}/${project}

local_confs_file_name=''

local_confs_file=${local_confs_dir}/${local_confs_file_name}

##  在用新配置文件覆盖掉旧配置文件之前，需备份旧的配置文件
##  定义备份目录和文件格式
backup_dir=${DIR}/${backup}/${soft}/${project}
backup_file_name=${local_confs_file_name}-$(date "+%Y%m%d%H%M%S")_last
backup_file=${backup_dir}/${backup_file_name}

##  远程服务器的配置文件所在的目录和文件名称
##  修改变量dest_confs_dir='' 为远程目标服务器的应用软件目录
##  修改变量dest_confs_file_name='' 为远程目标服务器的项目配置文件

dest_confs_dir='/usr/local/nginx-1.16.1/conf/conf.d'

dest_confs_file_name=''

dest_confs_file=${dest_confs_dir}/${dest_confs_file_name}

##  项目的远程服务器列表文件，这个文件内容有2部份，分别是"IP 环境" .例如 :
##  192.168.100.199  test
##  192.168.100.198  product
project_dest_server_list=${DIR}/${serverlist}/${soft}/${project}/server

##  远程服务器的端口号
port=22

##  应用软件的启动命令或启动脚本位置
##  示例是nginx软件的启动命令位置
dest_software_command='/usr/local/nginx-1.16.1/sbin/nginx'

##  应用命令函数 修改ssh中的命令
function dest_software_conf_check(){
    local server=$1
    ssh -p ${port} root@${server} "${dest_software_command} -t"
}
function dest_software_start(){
    local server=$1
    ssh -p ${port} root@${server} "dest_software_conf_check"
    if [ $? -ne 0 ];then
        exit 127
    fi
    ssh -p ${port} root@${server} "${dest_software_command}"
}
function dest_software_stop(){
    local server=$1
    ssh -p ${port} root@${server} "${dest_software_command} -s stop"
}
function dest_software_reload(){
    local server=$1
    ssh -p ${port} root@${server} "dest_software_conf_check"
    if [ $? -ne 0 ];then
        exit 127
    fi
    ssh -p ${port} root@${server} "${dest_software_command} -s reload"
}
